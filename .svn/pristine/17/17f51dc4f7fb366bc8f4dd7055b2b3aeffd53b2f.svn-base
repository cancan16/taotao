package com.taotao.web.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.apache.commons.lang3.StringUtils;
import org.joda.time.DateTime;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.taotao.web.bean.Cart;
import com.taotao.web.bean.Item;
import com.taotao.web.bean.Order;
import com.taotao.web.bean.User;
import com.taotao.web.service.CartService;
import com.taotao.web.service.ItemService;
import com.taotao.web.service.OrderService;
import com.taotao.web.threadLocal.UserThreadLocal;

/**
 * @ClassName OrderController
 * @Author volc
 * @Description 订单操作
 * @Date 2017年3月1日 上午11:44:48
 */
@RequestMapping("order")
@Controller
public class OrderController {
    @Autowired
    private ItemService itemService;

    @Autowired
    private OrderService orderService;

    @Autowired
    private CartService carService;
    /**
     * @MethodName toOrder
     * @Author volc
     * @Description 跳到订单确认页面
     * @Date 2017年3月1日 上午11:46:55
     * @url http://www.taotao.com/order/46.html
     */
    @RequestMapping(value = "{itemId}", method = RequestMethod.GET)
    public ModelAndView toOrder(@PathVariable("itemId") Long itemId) {
	ModelAndView mv = new ModelAndView("order");
	Item resultItem = this.itemService.queryItemById(itemId);
	mv.addObject("item", resultItem);
	return mv;
    }
    
    /**
     * @MethodName toCartOrder
     * @Author volc
     * @Description 基于购入车下单
     * @Date 2017年3月3日 上午12:25:58
     */
    @RequestMapping(value = "create", method = RequestMethod.GET)
    public ModelAndView toCartOrder() {
	ModelAndView mv = new ModelAndView("order-cart");
	User user = UserThreadLocal.get();
	List<Cart> carts = this.carService.queryCartListByUserId(user.getId());
	mv.addObject("carts", carts);
	return mv;
    }

    /**
     * @MethodName submitOrder
     * @Author volc
     * @Description 处理下单提交的数据
     * @Date 2017年3月1日 下午12:23:56
     */
    @ResponseBody
    @RequestMapping(value = "submit", method = RequestMethod.POST)
    public Map<String, Object> submitOrder(Order order) {
	Map<String, Object> result = new HashMap<String, Object>();
	String orderId = this.orderService.submitOrder(order);
	if (StringUtils.isEmpty(orderId)) { // 下单失败
	    result.put("status", 300);
	} else {
	    result.put("status", 200);
	    result.put("data", orderId);
	}
	return result;
    }

    /**
     * @MethodName success
     * @Author volc
     * @Description 下单成功跳转页面
     * @Date 2017年3月1日 下午2:31:09
     */
    @RequestMapping(value = "success", method = RequestMethod.GET)
    public ModelAndView success(@RequestParam("id") String orderId) {
	ModelAndView mv = new ModelAndView("success");
	Order order = this.orderService.queryOrderById(orderId);
	mv.addObject("order", order);
	// 当前时间向后推两天 格式：01月23日
	mv.addObject("date", new DateTime().plusDays(2).toString("MM月dd日"));
	return mv;
    }
}
